{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["math","create","all","App","state","output","history","showHistory","handleClick","num","setState","evaluate","array","toString","concat","split","length","toggleHistory","displayHistoryArray","map","item","className","text","this","onClick","React","Component","Button","props","Output","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.071a8bf4.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport {create, all} from 'mathjs';\nconst math = create(all); \n\nclass App extends React.Component {\n  state = {\n    output: 0,\n    history: [],\n    showHistory: false,\n  }\n\n  handleClick = (num) => {\n    if(num === \"AC\") {\n      this.setState({ output: 0, history: [] });\n    } else if (num === \"^\" || num === \"%\" || num === \"/\" || num === \"*\") {\n      return\n    } else if (num === \"=\") {\n      // learned about prevState and why you shouldn't do what is below ------------v\n      this.setState({ output: math.evaluate(this.state.output), history: [...this.state.history, this.state.output] });\n    } else if (this.state.output === 0) {\n      this.setState({ output: num });\n    } else {\n      let str = this.state.output.toString().concat(num.toString());\n      let array = str.split(\"\");\n      while (num === array[array.length - 2]) {\n        return\n      }\n      this.setState({ output: this.state.output.toString().concat(num.toString()) });\n    }\n  }\n\n  toggleHistory = () => {\n    this.setState({ showHistory: !this.state.showHistory });\n  }\n\n  displayHistoryArray = () => {\n    return this.state.history.map(item => <>{item}<br/></>);\n  }\n\n  render() {\n    return (\n    <div className=\"main\">\n      <div className=\"container\">\n        <Output className=\"output\" text={this.state.output}/>\n        <Button onClick={() => this.handleClick(\"AC\")} className=\"top3\" text=\"AC\"/>\n        <Button onClick={() => this.handleClick(\"^\")} className=\"top3\" text=\"xʸ\"/>\n        <Button onClick={() => this.handleClick(\"%\")} className=\"top3\" text=\"%\"/>\n        <Button onClick={() => this.handleClick(\"/\")} className=\"operator\" text=\"÷\"/>\n        <Button onClick={() => this.handleClick(7)} text=\"7\"/>\n        <Button onClick={() => this.handleClick(8)} text=\"8\"/>\n        <Button onClick={() => this.handleClick(9)} text=\"9\"/>\n        <Button onClick={() => this.handleClick(\"*\")} className=\"operator\" text=\"x\"/>\n        <Button onClick={() => this.handleClick(4)} text=\"4\"/>\n        <Button onClick={() => this.handleClick(5)} text=\"5\"/>\n        <Button onClick={() => this.handleClick(6)} text=\"6\"/>\n        <Button onClick={() => this.handleClick(\"-\")} className=\"operator\" text=\"-\"/>\n        <Button onClick={() => this.handleClick(1)} text=\"1\"/>\n        <Button onClick={() => this.handleClick(2)} text=\"2\"/>\n        <Button onClick={() => this.handleClick(3)} text=\"3\"/>\n        <Button onClick={() => this.handleClick(\"+\")} className=\"operator\" text=\"+\"/>\n        <Button onClick={() => this.handleClick(0)} className=\"zero\" text=\"0\"/>\n        <Button onClick={() => this.handleClick(\".\")} text=\".\"/>\n        <Button onClick={() => this.handleClick(\"=\")} className=\"operator\" text=\"=\"/>\n        <Button onClick={this.toggleHistory} className=\"historyButton\" text=\"History\"/>\n      </div>\n      {this.state.showHistory ? <div className=\"container2\"><Output className=\"history\" text={this.displayHistoryArray()}/></div>:null}\n    </div>\n    )\n  }\n}\n\nconst Button = (props) => {\n  return (\n  <button onClick={props.onClick} className={props.className}>{props.text}</button>\n  )\n}\n\nconst Output = (props) => {\n  return (\n    <p className={props.className}>{props.text}</p>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}